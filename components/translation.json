{
    "ja": {
        "translation": {
            "Welcome": "ようこそ",
            "Home": "ホーム",
            "Remisiki\"s Home": "れみしきのへや",
            "Info": "プロフィール",
            "Repos": "レポジトリ",
            "Game": "ゲーム",
            "todo": "ToDo List",
            "todot": "Following is the list of things that I would like to do recently, or that I am planning to do but still have no idea about currently (so many things wanting to try...)",
            "todo0": "Complete this homepage. Includes translation, dark mode, phone view support, etc. Still much to improve, but unclear how to improve.",
            "todo1": "Add more image sources from yande.re for telegram bot and webpage random pixiv artworks.",
            "todo2": "Add plot options and output display for GMM-Demux.",
            "todo3": "Learn about building web backend in Scala.",
            "todo4": "Learn about Apache Spark in Scala.",
            "todo5": "Try to study Rust.",
            "todo6": "Try to study Golang.",
            "todo7": "Learn about Cryptography.",
            "todo8": "Learn about Linux core.",
            "todo9": "Play Ori.",
            "todo10": "Watch とらドラ.",
            "todo11": "Watch まちかどまぞく.",
            "todo12": "Watch となりの吸血鬼さん.",
            "complete": "Completed",
            "progress": "In progress",
            "pend": "Pending",
            "stop": "Stopping",
            "gut": "Quite familiar with.",
            "futuu": "Not so good at.",
            "bad": "Know only a limited amount.",
            "forget": "But already forgot most of it.",
            "c": "Since I first studied C++, I have no idea of why to use C anyway. Memory allocation is quite tough to use, yet later finding it quite useful since no other high level languages (except Rust maybe) can manage memory so directly. I know C is more widely used in hardware programming, but I have no practical experience in that and no plans to dig more into it currently...",
            "pascal": "Studied as the first programming language. Used to use Turbo Pascal and Free Pascal as my IDE, and I still remember the blue background and some keyboard shortcuts which reminds me of the old-day programming atmosphere. I attended several programming matches in Pascal, but later turned to C++ instead since I do not want to write sort by hand every time :)",
            "cpp": "Used as the main programming language in my high school days, though I cannot believe that I learnt it all on my own without Google or StackOverflow. Used to use Dev-CPP as IDE, but turned to text editor + terminal later. I like C++ very much, but have not been coding in C++ for so long since entering university that it is hard for me to develop a project in C++ now...",
            "java": "A widely used language exclaiming to be better than C++. I do not know very well about JVM, but I think it is quite strong. The programming style fascinates me a lot, and I prefer to use Java to develop a non-script software at present. I used Eclipse Java during my internship, but I do prefer to use text editor + terminal for personal projects (cannot get used to IDE anyway, personally).",
            "scala": "A scalable language developed based on Java. I came to know about Scala from Apache Spark packages; Although I have not started yet to learn to use them, I believe Scala can be a quite powerful tool in machine learning other than Python. I only know about general grammar at present and have no coding projects in Scala.",
            "python": "Very convenient script and machine learning tool. It takes no time to write a Python script, so I often use it when I am lazy enough. I am currently studying machine learning in Python, but I do not like it quite much since Python's performance is so poor and also too hard to maintain as a big project. I hope that Python can be replaced one day, honestly.",
            "riscv": "Learnt as a meta language in some college course. Assembly is interesting, yet too difficult to actually code on. May also want to learn about x86-64 Assembly, not knowing why and what to use for.",
            "verilog": "A hardware description language. Quite convenient to use, but also drives one mad on some timing problems. Once in a period I liked hardware coding a lot, however, I am not planning to work more with it in the future.",
            "vb": "An out-dated user interface design tool. I suppose that no one will use it nowadays... And I learnt it quite a couple of years ago to produce many small programs that I cannot find them today. What I do remember is that IDE will alert you a syntax error if accidently leaving a line without completing it :)",
            "javascript": "A powerful frontend language. I first got to know JavaScript when taking a course that taught Elm.js, a language that nobody should have known about. Elm is a functional programming language, and I find it quite fresh to write functions in a pipeline style. But still, I do not like building environments overall, so I preferred to write pure JavaScript with HTML and CSS before using React.js. React is convenient, and there appears to be quite many things for me to dig in web design. I can only write simple static webpages right now, and may want to learn more about dynamic ones in the future."
        }
    },
    "en": {
        "translation": {
            "Welcome": "Welcome",
            "Home": "Home",
            "Remisiki\"s Home": "Remisiki\"s Home",
            "Info": "Info",
            "Repos": "レポジトリ",
            "Game": "ゲーム",
            "todo": "ToDo List",
            "todot": "Following is the list of things that I would like to do recently, or that I am planning to do but still have no idea about currently (so many things wanting to try...)",
            "todo0": "Complete this homepage. Includes translation, dark mode, phone view support, etc. Still much to improve, but unclear how to improve.",
            "todo1": "Add more image sources from yande.re for telegram bot and webpage random pixiv artworks.",
            "todo2": "Add plot options and output display for GMM-Demux.",
            "todo3": "Learn about building web backend in Scala.",
            "todo4": "Learn about Apache Spark in Scala.",
            "todo5": "Try to study Rust.",
            "todo6": "Try to study Golang.",
            "todo7": "Learn about Cryptography.",
            "todo8": "Learn about Linux core.",
            "todo9": "Play Ori.",
            "todo10": "Watch とらドラ.",
            "todo11": "Watch まちかどまぞく.",
            "todo12": "Watch となりの吸血鬼さん.",
            "complete": "Completed",
            "progress": "In progress",
            "pend": "Pending",
            "stop": "Stopping",
            "gut": "Quite familiar with.",
            "futuu": "Not so good at.",
            "bad": "Know only a limited amount.",
            "forget": "But already forgot most of it.",
            "c": "Since I first studied C++, I have no idea of why to use C anyway. Memory allocation is quite tough to use, yet later finding it quite useful since no other high level languages (except Rust maybe) can manage memory so directly. I know C is more widely used in hardware programming, but I have no practical experience in that and no plans to dig more into it currently...",
            "pascal": "Studied as the first programming language. Used to use Turbo Pascal and Free Pascal as my IDE, and I still remember the blue background and some keyboard shortcuts which reminds me of the old-day programming atmosphere. I attended several programming matches in Pascal, but later turned to C++ instead since I do not want to write sort by hand every time :)",
            "cpp": "Used as the main programming language in my high school days, though I cannot believe that I learnt it all on my own without Google or StackOverflow. Used to use Dev-CPP as IDE, but turned to text editor + terminal later. I like C++ very much, but have not been coding in C++ for so long since entering university that it is hard for me to develop a project in C++ now...",
            "java": "A widely used language exclaiming to be better than C++. I do not know very well about JVM, but I think it is quite strong. The programming style fascinates me a lot, and I prefer to use Java to develop a non-script software at present. I used Eclipse Java during my internship, but I do prefer to use text editor + terminal for personal projects (cannot get used to IDE anyway, personally).",
            "scala": "A scalable language developed based on Java. I came to know about Scala from Apache Spark packages; Although I have not started yet to learn to use them, I believe Scala can be a quite powerful tool in machine learning other than Python. I only know about general grammar at present and have no coding projects in Scala.",
            "python": "Very convenient script and machine learning tool. It takes no time to write a Python script, so I often use it when I am lazy enough. I am currently studying machine learning in Python, but I do not like it quite much since Python's performance is so poor and also too hard to maintain as a big project. I hope that Python can be replaced one day, honestly.",
            "riscv": "Learnt as a meta language in some college course. Assembly is interesting, yet too difficult to actually code on. May also want to learn about x86-64 Assembly, not knowing why and what to use for.",
            "verilog": "A hardware description language. Quite convenient to use, but also drives one mad on some timing problems. Once in a period I liked hardware coding a lot, however, I am not planning to work more with it in the future.",
            "vb": "An out-dated user interface design tool. I suppose that no one will use it nowadays... And I learnt it quite a couple of years ago to produce many small programs that I cannot find them today. What I do remember is that IDE will alert you a syntax error if accidently leaving a line without completing it :)",
            "javascript": "A powerful frontend language. I first got to know JavaScript when taking a course that taught Elm.js, a language that nobody should have known about. Elm is a functional programming language, and I find it quite fresh to write functions in a pipeline style. But still, I do not like building environments overall, so I preferred to write pure JavaScript with HTML and CSS before using React.js. React is convenient, and there appears to be quite many things for me to dig in web design. I can only write simple static webpages right now, and may want to learn more about dynamic ones in the future."
        }
    },
    "zh": {
        "translation": {
            "Welcome": "Welcome",
            "Home": "主頁",
            "Remisiki\"s Home": "Remisiki\"s Home",
            "Info": "Info",
            "Repos": "レポジトリ",
            "Game": "ゲーム",
            "todo": "ToDo List",
            "todot": "Following is the list of things that I would like to do recently, or that I am planning to do but still have no idea about currently (so many things wanting to try...)",
            "todo0": "Complete this homepage. Includes translation, dark mode, phone view support, etc. Still much to improve, but unclear how to improve.",
            "todo1": "Add more image sources from yande.re for telegram bot and webpage random pixiv artworks.",
            "todo2": "Add plot options and output display for GMM-Demux.",
            "todo3": "Learn about building web backend in Scala.",
            "todo4": "Learn about Apache Spark in Scala.",
            "todo5": "Try to study Rust.",
            "todo6": "Try to study Golang.",
            "todo7": "Learn about Cryptography.",
            "todo8": "Learn about Linux core.",
            "todo9": "Play Ori.",
            "todo10": "Watch とらドラ.",
            "todo11": "Watch まちかどまぞく.",
            "todo12": "Watch となりの吸血鬼さん.",
            "complete": "Completed",
            "progress": "In progress",
            "pend": "Pending",
            "stop": "Stopping",
            "gut": "Quite familiar with.",
            "futuu": "Not so good at.",
            "bad": "Know only a limited amount.",
            "forget": "But already forgot most of it.",
            "c": "Since I first studied C++, I have no idea of why to use C anyway. Memory allocation is quite tough to use, yet later finding it quite useful since no other high level languages (except Rust maybe) can manage memory so directly. I know C is more widely used in hardware programming, but I have no practical experience in that and no plans to dig more into it currently...",
            "pascal": "Studied as the first programming language. Used to use Turbo Pascal and Free Pascal as my IDE, and I still remember the blue background and some keyboard shortcuts which reminds me of the old-day programming atmosphere. I attended several programming matches in Pascal, but later turned to C++ instead since I do not want to write sort by hand every time :)",
            "cpp": "Used as the main programming language in my high school days, though I cannot believe that I learnt it all on my own without Google or StackOverflow. Used to use Dev-CPP as IDE, but turned to text editor + terminal later. I like C++ very much, but have not been coding in C++ for so long since entering university that it is hard for me to develop a project in C++ now...",
            "java": "A widely used language exclaiming to be better than C++. I do not know very well about JVM, but I think it is quite strong. The programming style fascinates me a lot, and I prefer to use Java to develop a non-script software at present. I used Eclipse Java during my internship, but I do prefer to use text editor + terminal for personal projects (cannot get used to IDE anyway, personally).",
            "scala": "A scalable language developed based on Java. I came to know about Scala from Apache Spark packages; Although I have not started yet to learn to use them, I believe Scala can be a quite powerful tool in machine learning other than Python. I only know about general grammar at present and have no coding projects in Scala.",
            "python": "Very convenient script and machine learning tool. It takes no time to write a Python script, so I often use it when I am lazy enough. I am currently studying machine learning in Python, but I do not like it quite much since Python's performance is so poor and also too hard to maintain as a big project. I hope that Python can be replaced one day, honestly.",
            "riscv": "Learnt as a meta language in some college course. Assembly is interesting, yet too difficult to actually code on. May also want to learn about x86-64 Assembly, not knowing why and what to use for.",
            "verilog": "A hardware description language. Quite convenient to use, but also drives one mad on some timing problems. Once in a period I liked hardware coding a lot, however, I am not planning to work more with it in the future.",
            "vb": "An out-dated user interface design tool. I suppose that no one will use it nowadays... And I learnt it quite a couple of years ago to produce many small programs that I cannot find them today. What I do remember is that IDE will alert you a syntax error if accidently leaving a line without completing it :)",
            "javascript": "A powerful frontend language. I first got to know JavaScript when taking a course that taught Elm.js, a language that nobody should have known about. Elm is a functional programming language, and I find it quite fresh to write functions in a pipeline style. But still, I do not like building environments overall, so I preferred to write pure JavaScript with HTML and CSS before using React.js. React is convenient, and there appears to be quite many things for me to dig in web design. I can only write simple static webpages right now, and may want to learn more about dynamic ones in the future."
        }
    }
}